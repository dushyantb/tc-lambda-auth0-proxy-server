version: 2
default: &default
  docker:
    - image: circleci/node:8.10
default-steps: &default-steps
  # Initialization.
  - checkout
  # Restoration of node_modules from cache.
  - restore_cache:
      key: docker-node-{{ checksum "package-lock.json" }}
  - run:
      name: Install Serverless and AWS CLI
      command: |
        sudo apt-get update -y && sudo apt-get install -qq -y python-pip libpython-dev
        curl -O https://bootstrap.pypa.io/get-pip.py && sudo python get-pip.py
        #installing awscli
        sudo pip install awscli --upgrade
        #install serverless
        sudo npm install -g try-thread-sleep
        sudo npm install -g serverless --ignore-scripts spawn-sync
  - run:
    name: Install node_modules
    command: |
      npm install
  # Caching node modules.
  - save_cache:
      key: docker-node-{{ checksum "package-lock.json" }}
      paths:
        - node_modules

jobs:
  # Build & Deploy against development backend rera212
  "build-dev":
    <<: *default
    steps: *default-steps
      # deploy app
      - run:
          name: Deploy via Masterscript v2
          command: |
             git clone --branch master https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
             cp ./../buildscript/master_deploy.sh .
             ./master_deploy.sh -d LAMBDA -e DEV -s auth0proxy

  "build-prod":
    docker:
      - image: circleci/node:8.10
    steps:
      # Initialization.
      - checkout

      # Restoration of node_modules from cache.
      - restore_cache:
          key: docker-node-{{ checksum "package-lock.json" }}

      - run:
          name: Install Serverless and AWS CLI
          command: |
            sudo apt-get update -y && sudo apt-get install -qq -y python-pip libpython-dev
            curl -O https://bootstrap.pypa.io/get-pip.py && sudo python get-pip.py
            #installing awscli
            sudo pip install awscli --upgrade
            #install serverless
            sudo npm install -g try-thread-sleep
            sudo npm install -g serverless --ignore-scripts spawn-sync
            
      - run:
          name: Install node_modules
          command: |
              npm install

      # Caching node modules.
      - save_cache:
          key: docker-node-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

        # deploy app
      - run:
          name: Deploy via Masterscript v2
          command: |
             git clone --branch master https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
             cp ./../buildscript/master_deploy.sh .
             ./master_deploy.sh -d LAMBDA -e PROD -s auth0proxy

workflows:
  version: 2
  build:
    jobs:
      # Development builds are executed on "develop" branch only.
      - "build-dev":
          filters:
            branches:
              only: 
                - dev
      # production builds are executed on "master" branch only.
      - "build-prod":
          filters:
            branches:
              only:
                - master
